---
import type { HTMLAttributes } from "astro/types";

type Props = HTMLAttributes<"a">;

const { ...props } = Astro.props;
---

<a {...props}><slot /></a>
<style>
  a {
    background: var(--color-primary-800);
    border-radius: 0.5rem;
    border: none;
    color: white;
    cursor: pointer;
    font-size: 1rem;
    padding: 0.5rem 1rem;
    text-decoration: none;
    transition: all 0.5s ease;
    display: flex;
    width: min-content;
    align-items: center;
    gap: 0.5rem;
    white-space: nowrap;
  }
  a:hover,
  a:focus {
    background: var(--color-primary-600);
  }

  /* ---- Configurable light-blue pulse color ---- */
  :root {
    --wave-rgb: 56, 189, 248; /* light sky blue */
  }

  /* ---- Button base ---- */
  a {
    position: relative;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: 12px 20px;
    font:
      600 16px/1.1 system-ui,
      -apple-system,
      Segoe UI,
      Roboto,
      Arial,
      sans-serif;
    color: #fff;
    background: rgb(14, 165, 233); /* base button color */
    border: none;
    border-radius: 10px;
    cursor: pointer;
    /* Keep shadows visible beyond the button box */
    overflow: visible;
    z-index: 0; /* create a stacking context for pseudo elements */
  }

  /* Optional: steady on-border glow so it reads as a "border" */
  a::before {
    content: "";
    position: absolute;
    inset: 0;
    border-radius: inherit;
    pointer-events: none;
    /* a thin border-like halo + soft glow */
    box-shadow:
      0 0 0 2px rgba(var(--wave-rgb), 0.55),
      0 10px 24px rgba(var(--wave-rgb), 0.28);
    z-index: -1;
  }

  /* ---- Animated waves (outside only) using box-shadow spreads ---- */
  a::after {
    content: "";
    position: absolute;
    inset: 0; /* shadow grows OUTSIDE this rect */
    border-radius: inherit;
    pointer-events: none;
    z-index: -2;
    /* three concentric rings that we animate outward + fade */
    box-shadow:
      0 0 0 0 rgba(var(--wave-rgb), 0.4),
      0 0 0 0 rgba(var(--wave-rgb), 0.22),
      0 0 0 0 rgba(var(--wave-rgb), 0.1);
    animation: wave-pulse 2.2s ease-out infinite;
    will-change: box-shadow;
  }

  /* ---- Keyframes: grow the shadow spreads & fade out ---- */
  @keyframes wave-pulse {
    0% {
      box-shadow:
        0 0 0 0 rgba(var(--wave-rgb), 0.45),
        0 0 0 8px rgba(var(--wave-rgb), 0.25),
        0 0 0 16px rgba(var(--wave-rgb), 0.12);
    }
    60% {
      box-shadow:
        0 0 0 16px rgba(var(--wave-rgb), 0.18),
        0 0 0 28px rgba(var(--wave-rgb), 0.1),
        0 0 0 40px rgba(var(--wave-rgb), 0.05);
    }
    100% {
      box-shadow:
        0 0 0 48px rgba(var(--wave-rgb), 0),
        0 0 0 60px rgba(var(--wave-rgb), 0),
        0 0 0 72px rgba(var(--wave-rgb), 0);
    }
  }

  /* Respect reduced motion preferences */
  @media (prefers-reduced-motion: reduce) {
    a::after {
      animation: none;
    }
  }
</style>
